using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;

namespace HL7Data.Models.Tables.Standard
{
    public static class LookupTables
    {
        public static ICollection<ITableInfo> TableValues = new Collection<ITableInfo>
        {
            AcknowledgmentCode.Instance,
            AllergySeverity.Instance,
            AllergenType.Instance,
            AdministrativeSex.Instance,
            AdmissionType.Instance,
            AmbulatoryStatus.Instance,
            AmountType.Instance,
            AssignmentOfBenefits.Instance,
            BedStatus.Instance,
            CertificationPatientType.Instance,
            ChargeType.Instance,
            CheckDigitScheme.Instance,
            CommentSource.Instance,
            ContactRole.Instance,
            DayType.Instance,
            DiagnosisType.Instance,
            DiagnosticServiceSection.Instance,
            EligibilitySource.Instance,
            EmploymentStatus.Instance,
            EventReason.Instance,
            EventType.Instance,
            HospitalService.Instance,
            InterpretationCodes.Instance,
            InvocationEvent.Instance,
            MailClaimParty.Instance,
            MaritalStatus.Instance,
            MessageType.Instance,
            MilitaryRankOrGrade.Instance,
            MilitaryService.Instance,
            MilitaryStatus.Instance,
            MoneyOrPercentageIndicator.Instance,
            NatureOfAbnormalTesting.Instance,
            ObservationResultStatusCodeInterpretation.Instance,
            OrderControlCodes.Instance,
            OrderStatus.Instance,
            OutlierType.Instance,
            PatientClass.Instance,
            PolicyType.Instance,
            Priority.Instance,
            ProcedureCode.Instance,
            Processing.Instance,
            QuantityLimitedRequest.Instance,
            QueryPriority.Instance,
            Race.Instance,
            ReadmissionIndicator.Instance,
            Relationship.Instance,
            ReleaseInformation.Instance,
            Religion.Instance,
            ResponseFlag.Instance,
            ResultStatus.Instance,
            RoomType.Instance,
            SpecimenActionCode.Instance,
            TransactionType.Instance,
            TransportationMode.Instance,
            TypeOfAgreement.Instance,
            ValueType.Instance,
            VersionId.Instance,
            VisitUserCode.Instance,
            YesNoIndicator.Instance,
        }.OrderBy(λ => λ.Id).ToList();
#if TODO
        public static readonly ICollection<Tuple<int, string, IDictionary<string, string>>> xTableValues =
            new Collection<Tuple<int, string, IDictionary<string, string>>>
            {

                new Tuple<int, string, IDictionary<string, string>>(203, "Identifier type",
                    new Dictionary<string, string>
                    {
                        {"AM", "American Express"},
                        {"AN", "Account number"},
                        {"ANON", "Anonymous identifier"},
                        {"ANC", "Account number Creditor"},
                        {"AND", "Account number debitor"},
                        {"ANT", "Temporary Account Number"},
                        {"APRN", "Advanced Practice Registered Nurse number"},
                        {"BA", "Bank Account Number"},
                        {"BC", "Bank Card Number"},
                        {"BR", "Birth registry number"},
                        {"BRN", "Breed Registry Number"},
                        {"CC", "Cost Center number"},
                        {"CY", "County number"},
                        {"DDS", "Dentist license number"},
                        {"DEA", "Drug Enforcement Administration registration number"},
                        {"DI", "Diner’s Club card"},
                        {"DFN", "Drug Furnishing or prescriptive authority Number"},
                        {"DL", "Driver’s license number"},
                        {"DN", "Doctor number"},
                        {"DPM", "Podiatrist license number"},
                        {"DO", "Osteopathic License number"},
                        {"DR", "Donor Registration Number"},
                        {"DS", "Discover Card"},
                        {"EI", "Employee number"},
                        {"EN", "Employer number"},
                        {"FI", "Facility ID"},
                        {"GI", "Guarantor internal identifier"},
                        {"GL", "General ledger number"},
                        {"GN", "Guarantor external  identifier"},
                        {"HC", "Health Card Number"},
                        {"JHN", "Jurisdictional health number (Canada)"},
                        {"IND", "Indigenous/Aboriginal"},
                        {"LI", "Labor and industries number"},
                        {"LN", "License number"},
                        {"LR", "Local Registry ID"},
                        {"MA", "Patient Medicaid number"},
                        {"MB", "Member Number"},
                        {"MC", "Patient's Medicare number"},
                        {"MCD", "Practitioner Medicaid number"},
                        {"MCN", "Microchip Number"},
                        {"MCR", "Practitioner Medicare number"},
                        {"MD", "Medical License number"},
                        {"MI", "Military ID number"},
                        {"MR", "Medical record number"},
                        {"MRT", "Temporary Medical Record Number"},
                        {"MS", "MasterCard"},
                        {"NE", "National employer identifier"},
                        {"NH", "National Health Plan Identifier"},
                        {"NI", "National unique individual identifier"},
                        {"NII", "National Insurance Organization Identifier"},
                        {"NIIP", "National Insurance Payor Identifier (Payor)"},
                        {
                            "NNxxx",
                            "National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code"
                        },
                        {"NP", "Nurse practitioner number"},
                        {"NPI", "National provider identifier"},
                        {"OD", "Optometrist license number"},
                        {"PA", "Physician Assistant number"},
                        {"PCN", "Penitentiary/correctional institution Number"},
                        {"PE", "Living Subject Enterprise Number"},
                        {"PEN", "Pension Number"},
                        {"PI", "Patient internal identifier"},
                        {"PN", "Person number"},
                        {"PNT", "Temporary Living Subject Number"},
                        {"PPN", "Passport number"},
                        {"PRC", "Permanent Resident Card Number"},
                        {"PRN", "Provider number"},
                        {"PT", "Patient external identifier"},
                        {"QA", "QA number"},
                        {"RI", "Resource identifier"},
                        {"RPH", "Pharmacist license number"},
                        {"RN", "Registered Nurse Number"},
                        {"RR", "Railroad Retirement number"},
                        {"RRI", "Regional registry ID"},
                        {"SL", "State license"},
                        {"SN", "Subscriber Number"},
                        {"SR", "State registry ID"},
                        {"SS", "Social Security number"},
                        {"TAX", "Tax ID number"},
                        {"TN", "Treaty Number/ (Canada)"},
                        {"U", "Unspecified identifier"},
                        {"UPIN", "Medicare/CMS (formerly HCFA)’s Universal Physician Identification numbers"},
                        {"VN", "Visit number"},
                        {"VS", "VISA"},
                        {"WC", "WIC identifier"},
                        {"WCN", "Workers’ Comp Number"},
                        {"XX", "Organization identifier"}
                    })
            };
#endif
    }
}